<PRE>

MKISOFS(8)                                             MKISOFS(8)

<H2>NAME</H2>
       mkisofs  -  create a iso9660 filesystem with optional Rock
       Ridge attributes.

<H2>SYNOPSIS</H2>
       <b>mkisofs</b> [ <b>-a</b> ] [ <b>-b</b> <i>boot</i><b>_</b><i>image</i> ] [ <b>-c</b> <i>boot</i><b>_</b><i>catalog</i> ] [  <b>-A</b>
       <i>application</i><b>_</b><i>id</i> ] [ <b>-f</b> ] [ <b>-d</b> ] [ <b>-D</b> ] [ <b>-J</b> ] [ <b>-l</b> ] [ <b>-L</b> ]
       [ <b>-L</b>  ]  [  <b>-no-split-symlink-components</b>  ]  [  <b>-no-split-</b>
       <b>symlink-fields</b> ] [ <b>-p</b> <i>preparer</i> ] [ <b>-print-size</b> ] [ <b>-P</b> <i>pub-</i>
       <i>lisher</i> ] [ <b>-quiet</b> ] [ <b>-r</b> ] [ <b>-R</b> ] [ <b>-T</b> ] [ <b>-v</b> ] [ <b>-V</b>  ]  [
       <b>-V</b>  <i>volid</i>  ]  [  <b>-x</b>  <i>path</i> ] [ <b>-z</b> ] [ <b>-m</b> <i>glob</i> ] <b>-o</b> <i>filename</i>
       <i>pathspec</i> <i>[pathspec]</i>

<H2>DESCRIPTION</H2>
       <b>mkisofs</b> is effectively a pre-mastering program to generate
       the  iso9660  filesystem  - it takes a snapshot of a given
       directory tree, and generates a binary  image  which  will
       correspond  to  an  iso9660  filesystem  when written to a
       block device.

       <b>mkisofs</b> is also capable of generating the System Use Shar-
       ing  Protocol  records  specified by the Rock Ridge Inter-
       change Protocol.  This is used  to  further  describe  the
       files  in  the iso9660 filesystem to a unix host, and pro-
       vides information such as longer filenames, uid/gid, posix
       permissions, and block and character devices.

       Each  file  written  to the iso9660 filesystem must have a
       filename in the 8.3 format (8 characters, period, 3  char-
       acters,  all  upper  case),  even if Rock Ridge is in use.
       This filename is used on systems that are not able to make
       use  of  the  Rock  Ridge extensions (such as MS-DOS), and
       each filename in each directory must be different from the
       other  filenames in the same directory.  <b>mkisofs</b> generally
       tries to form correct names by forcing the  unix  filename
       to  upper case and truncating as required, but often times
       this yields unsatisfactory results when  there  are  cases
       where  the  truncated  names  are not all unique.  <b>mkisofs</b>
       assigns weightings to each filename, and if two names that
       are  otherwise  the same are found the name with the lower
       priority is renamed to have a 3 digit number as an  exten-
       sion  (where  the  number is guaranteed to be unique).  An
       example of this would be the files foo.bar and foo.bar.~1~
       -  the  file foo.bar.~1~ would be written as FOO.000;1 and
       the file foo.bar would be written as FOO.BAR;1

       Note that <b>mkisofs</b> is not designed to communicate with  the
       writer  directly.   Most  writers have proprietary command
       sets which vary from one manufacturer to another, and  you
       need  a  specialized  tool to actually burn the disk.  The
       <b>cdwrite</b> utility is one such tool that runs under Linux and
       performs  this  task.   The  latest  version of <b>cdwrite</b> is
       capable of communicating with Phillips/IMS/Kodak,  HP  and
       Yamaha drives.  Most writers come with some version of DOS
       software that allows a direct image  copy  of  an  iso9660
       image  to  the  writer.  The current version of <b>cdwrite</b> is
       available     from      sunsite.unc.edu:      /utils/disk-
       management/cdwrite-2.0.tar.gz  Note  that  cdwrite has not
       been actively maintained in recent times.

       The <b>cdrecord</b> utility is another utility capable of burning
       an  actual disc.  The latest version of <b>cdrecord</b> is avail-
       able from ftp://ftp.fokus.gmd.de/pub/unix/cdrecord

       Also you should know that most cd writers are very partic-
       ular  about  timing.   Once  you start to burn a disc, you
       cannot let their buffer empty before you are done, or  you
       will end up with a corrupt disc.  Thus it is critical that
       you be able to maintain an uninterrupted  data  stream  to
       the  writer  for  the  entire  time that the disc is being
       written.

       <b>path</b> is the path of the directory tree to be  copied  into
       the  iso9660 filesystem.  Multiple paths can be specified,
       and <b>mkisofs</b> will merge the files found in all of the spec-
       ified path components to form the cdrom image.

       It is possible to graft the paths at points other than the
       root directory, and it  is  possible  to  graft  files  or
       directories onto the cdrom image with names different than
       what they have in the source filesystem.  This is  easiest
       to  illustrate with a couple of examples.   Let's start by
       assuming that a local file ../old.lis exists, and you wish
       to include it in the cdrom image.

            foo/bar/=../old.lis

       will  include  the  file  old.lis  in  the  cdrom image at
       /foo/bar/old.lis, while

            foo/bar/xxx=../old.lis

       will include the  file  old.lis  in  the  cdrom  image  at
       /foo/bar/xxx.   The  same  sort of syntax can be used with
       directories as well.  <b>mkisofs</b> <b>will</b> <b>create</b> <b>any</b>  <b>directories</b>
       <b>required</b>  <b>such</b>  <b>that</b>  <b>the</b>  <b>graft</b> points exist on the cdrom
       image - the directories do not need to appear  in  one  of
       the  paths.   Any  directories that are created on the fly
       like this will have permissions  0555  and  appear  to  be
       owned  by  the  person running mkisofs.  If you wish other
       permissions or owners of the intermediate directories, the
       easiest solution is to create real directories in the path
       such that mkisofs doesn't have to invent them.

<H2>OPTIONS</H2>
       <i>-a</i>     
              Include  all  files  on  the  iso9660   filesystem.
              Normally  files  that contain the characters '~' or
              '#' will  not  be  included  (these  are  typically
              backup files for editors under unix).

       <i>-A</i> <i>application</i><b>_</b><i>id</i>
              Specifies  a  text string that will be written into
              the volume header.  This should describe the appli-
              cation that will be on the disc.  There is space on
              the disc for 128 characters of  information.   This
              parameter  can  also  be set in the file <i>.mkisofsrc</i>
              with APPI=id.  If specified  in  both  places,  the
              command line version is used.

       <i>-b</i> <i>boot</i><b>_</b><i>image</i>
              Specifies  the  path and filename of the boot image
              to be used when making an "El Torito" bootable  CD.
              The  pathname  must  be relative to the source path
              specified to <b>mkisofs.</b>  This option is  required  to
              make a bootable CD.  The boot image must be exactly
              the size of either a  1.2,  1.44,  or  a  2.88  meg
              floppy,  and <b>mkisofs</b> will use this size when creat-
              ing the output iso9660 filesystem.  It  is  assumed
              that  the first 512 byte sector should be read from
              the boot image (it is essentially emulating a  nor-
              mal floppy drive).  This will work, for example, if
              the boot image is a LILO based boot floppy.

       <i>-c</i> <i>boot</i><b>_</b><i>catalog</i>
              Specifies the path and filename of the boot catalog
              to  be used when making an "El Torito" bootable CD.
              The pathname must be relative to  the  source  path
              specified  to  <b>mkisofs.</b>  This option is required to
              make a bootable CD.  This file will be  created  by
              <b>mkisofs</b>  in  the  source filesystem, so be sure the
              specified filename does not conflict with an exist-
              ing  file,  as it will be quietly overwritten! Usu-
              ally a name like "boot.catalog" is chosen.

       <i>-d</i>
              Omit trailing period from files that do not have  a
              period.  This violates the ISO9660 standard, but it
              happens to work on many systems.  Use with caution.

       <i>-D</i> 
              Do  not  use deep directory relocation, and instead
              just pack them in the way we see them.   This  vio-
              lates  the  ISO9660  standard, but it works on many
              systems.  Use with caution.

       <i>-f</i> 
              Follow symbolic links when generating the  filesys-
              tem.   When  this  option  is  not in use, symbolic
              links will be entered using Rock Ridge if  enabled,
              otherwise the file will be ignored.

       <i>-l</i>
              Allow  full  32  character filenames.  Normally the
              ISO9660 filename will be in an 8.3 format which  is
              compatible  with  MS-DOS,  even  though the ISO9660
              standard allows filenames of up to  32  characters.
              If  you  use this option, the disc may be difficult
              to use on a MS-DOS system, but this comes in  handy
              on  some  other  systems  (such as the Amiga).  Use
              with caution.

       <i>-J</i>
              Generate Joliet directory records  in  addition  to
              regular iso9660 file names.  This is primarily use-
              ful when the discs are to be used on Windows-NT  or
              Windows-95  machines.    The  Joliet  filenames are
              specified in Unicode and each path component can be
              up to 64 Unicode characters long.

       <i>-L</i>
              Allow filenames to begin with a period.  Usually, a
              leading dot is replaced with an underscore in order
              to maintain MS-DOS compatibility.

       <i>-m</i> <i>glob</i>
              Exclude  <i>glob</i> from being written to CDROM.  <i>glob</i> is
              a shell wild-card-style  pattern  that  must  match
              part  of  the filename (not the path as with option
              <b>-x</b>).   Technically  <i>glob</i>  is  matched  against  the
              <i>d-&gt;d</i><b>_</b><i>name</i>  part  of  the directory entry.  Multiple
              globs may be excluded (up to 1000).  Example:

              mkisofs -o rom -m '*.o' -m core -m foobar

              would exclude all  files  ending  in  ".o",  called
              "core" or "foobar" to be copied to CDROM. Note that
              if you had a directory called "foobar" it too  (and
              of course all its descendants) would be excluded.

       <i>-M</i> <i>path</i>
              Specifies  path  to  existing  iso9660  image to be
              merged.  The output of <b>mkisofs</b> will be a  new  ses-
              sion  which  should  get  written to the end of the
              image specified in  -M.   Typically  this  requires
              multi-session capability for the recorder and cdrom
              drive that you are attempting to write  this  image
              to.   Support  for  this  is not yet 100% complete,
              because  some  handshaking  is   required   between
              mkisofs  and cdwrite in order to determine the next
              writable address on the cdrom.

       <i>-N</i> 
              Omit version numbers from ISO9660 file names.  This
              may violate the ISO9660 standard, but no one really
              uses the version numbers anyway.  Use with caution.

       <i>-no-split-symlink-components</i>
              Don't split the SL components, but begin a new Con-
              tinuation Area (CE) instead. This  may  waste  some
              space,  but  the SunOS 4.1.4 cdrom driver has a bug
              in  reading  split  SL  components   (link_size   =
              component_size   instead  of  link_size  +=  compo-
              nent_size).

       <i>-no-split-symlink-fields</i>
              Don't split the SL fields, but begin a new Continu-
              ation Area (CE) instead. This may waste some space,
              but the SunOS 4.1.4 and Solaris 2.5.1 cdrom  driver
              have a bug in reading split SL fields (a `/' can be
              dropped).

       <i>-o</i> <i>filename</i>
              is the name  of  the  file  to  which  the  iso9660
              filesystem  image should be written.  This can be a
              disk file, a  tape  drive,  or  it  can  correspond
              directly  to  the  device  name of the optical disc
              writer.  If not specified, stdout  is  used.   Note
              that  the output can also be a block special device
              for a regular disk drive, in which  case  the  disk
              partition  can  be  mounted  and examined to ensure
              that the premastering was done correctly.

       <i>-P</i> <i>publisher</i><b>_</b><i>id</i>
              Specifies a text string that will be  written  into
              the  volume  header.  This should describe the pub-
              lisher of the CDROM, usually with a mailing address
              and  phone  number.  There is space on the disc for
              128 characters of information.  This parameter  can
              also  be set in the file <i>.mkisofsrc</i> with PUBL=.  If
              specified in both places, the command line  version
              is used.

       <i>-p</i> <i>preparer</i><b>_</b><i>id</i>
              Specifies  a  text string that will be written into
              the volume header.  This should describe  the  pre-
              parer  of the CDROM, usually with a mailing address
              and phone number.  There is space on the  disc  for
              128  characters of information.  This parameter can
              also be set in the file <i>.mkisofsrc</i> with PREP=.   If
              specified  in both places, the command line version
              is used.

       <i>-print-size</i>
              Print estimated  filesystem  size  and  exit.  This
              option  is  needed  for  Disk At Once mode and with
              some  CD-R  drives  when   piping   directly   into
              <b>cdrecord.</b>   In  this  case it is needed to know the
              size  of  the  filesustem  before  the  actual  CD-
              creation is done.  The option -print-size allows to
              get this size from a "dry-run"  before  the  CD  is
              actually written.

       <i>-R</i>
              Generate  SUSP  and RR records using the Rock Ridge
              protocol to  further  describe  the  files  on  the
              iso9660 filesystem.

       <i>-r</i>
              This  is like the -R option, but file ownership and
              modes are set to more useful values.  The  uid  and
              gid  are set to zero, because they are usually only
              useful on the author's system, and  not  useful  to
              the  client.   All the file read bits are set true,
              so that files and directories are globally readable
              on  the  client.   If  any execute bit is set for a
              file, set all of the execute bits, so that executa-
              bles are globally executable on the client.  If any
              search bit is set for a directory, set all  of  the
              search  bits,  so  that  directories  are  globally
              searchable on  the  client.   All  write  bits  are
              cleared,  because  the CD-Rom will be mounted read-
              only in any case.  If any of the special mode  bits
              are  set,  clear  them,  because file locks are not
              useful on a read-only file system, and set-id  bits
              are not desirable for uid 0 or gid 0.

       <i>-T</i>
              Generate  a file TRANS.TBL in each directory on the
              CDROM, which can be used on non-Rock Ridge  capable
              systems  to  help establish the correct file names.
              There is also information present in the file  that
              indicates the major and minor numbers for block and
              character devices, and each symlink has the name of
              the link file given.

       <i>-V</i> <i>volid</i>
              Specifies the volume ID to be written into the mas-
              ter block.  This parameter can also be set  in  the
              file <i>.mkisofsrc</i> with VOLI=id.  If specified in both
              places, the command line version is used.

       <i>-v</i>
              Verbose execution.

       <i>-x</i> <i>path</i>
              Exclude <i>path</i> from being  written  to  CDROM.   <i>path</i>
              must  be  the  complete  pathname that results from
              concatenating the pathname given  as  command  line
              argument  and  the path relative to this directory.
              Multiple paths may be excluded (up to 1000).  Exam-
              ple:

              mkisofs -o cd -x /local/dir1 -x /local/dir2 /local

       <i>-z</i>     Generate  special  SUSP  records  for transparently
              compressed files.  This is only of use and interest
              for  hosts  that support transparent decompression.
              This is an experimental feature, and no  hosts  yet
              support this, but there are ALPHA patches for Linux
              that can make use of this feature.

<H2>CONFIGURATION</H2>
       <b>mkisofs</b> looks for the <i>.mkisofsrc</i> file, first in  the  cur-
       rent working directory, then in the user's home directory,
       and then in the directory in which the <b>mkisofs</b>  binary  is
       stored.  This file is assumed to contain a series of lines
       of the form "TAG=value", and in this way you  can  specify
       certain  options.  The case of the tag is not significant.
       Some fields in the volume header are not settable  on  the
       command  line,  but  can be altered through this facility.
       Comments may be placed in this  file,  using  lines  which
       start with a hash (#) character.

       APPI   The  application  identifier  should  describe  the
              application that will be on  the  disc.   There  is
              space  on  the  disc for 128 characters of informa-
              tion.  May be overridden using the -A command  line
              option.

       COPY   The copyright information, often the name of a file
              on the disc containing the copyright notice.  There
              is  space in the disc for 37 characters of informa-
              tion.

       ABST   The abstract information, often the name of a  file
              on the disc containing an abstract.  There is space
              in the disc for 37 characters of information.

       BIBL   The bibliographic information, often the name of  a
              file  on the disc containing a bibliography.  There
              is space in the disc for 37 characters of  informa-
              tion.

       PREP   This  should  describe  the  preparer of the CDROM,
              usually with a mailing address  and  phone  number.
              There  is  space  on the disc for 128 characters of
              information.  May be overridden using the  -p  com-
              mand line option.

       PUBL   This  should  describe  the publisher of the CDROM,
              usually with a mailing address  and  phone  number.
              There  is  space  on the disc for 128 characters of
              information.  May be overridden using the  -P  com-
              mand line option.

       SYSI   The  System Identifier.  There is space on the disc
              for 32 characters of information.

       VOLI   The Volume Identifier.  There is space on the  disc
              for  32 characters of information.  May be overrid-
              den using the -V command line option.

       VOLS   The Volume Set Name.  There is space  on  the  disc
              for 278 characters of information.

       <b>mkisofs</b>  can  also  be  configured  at  compile  time with
       defaults  for  many  of  these  fields.   See   the   file
       defaults.h.

<H2>AUTHOR</H2>
       <b>mkisofs</b> is not based on the standard mk*fs tools for unix,
       because we must generate a complete  copy of  an  existing
       filesystem on a disk in the  iso9660 filesystem.  The name
       mkisofs is probably a bit of a misnomer, since it not only
       creates  the filesystem, but it also populates it as well.

       Eric       Youngdale       &lt;ericy@gnu.ai.mit.edu&gt;       or
       &lt;eric@andante.jic.com&gt;  wrote  both  the  Linux  isofs9660
       filesystem and the mkisofs utility, and is currently main-
       taining  them.   The  copyright for the mkisofs utility is
       held by Yggdrasil Computing, Incorporated.

<H2>BUGS</H2>
       Any files that have hard links to files not  in  the  tree
       being copied to the iso9660 filessytem will have an incor-
       rect file reference count.

       There may be some other ones.  Please, report them to  the
       author.

<H2>FUTURE IMPROVEMENTS</H2>
       Some sort of gui interface.

<H2>AVAILABILITY</H2>
       <b>mkisofs</b> is available for anonymous ftp from tsx-11.mit.edu
       in  /pub/linux/packages/mkisofs  and  many  other   mirror
       sites.

Version 1.12b4                                               17 Feb 1998

</PRE>
